<script type="module">
  import Net from "./net/Net.js";
  import BootStrap from "./boot/BootStrap.js";

  const net = new Net();
  const bootstrap = new BootStrap(net,{repo: '/repo/search'});

  // Site-level menu (engines, scenes, config)
  const menu = await net.http.get("/api/menu.json", { format: "body" });

  // Optional: apply system config (e.g., title, theme)
  if (menu.system?.title) document.title = menu.system.title;

  // Inject menu into some UI component (dropdown, sidebar, etc.)
  window.app = { net, bootstrap, menu };

  // Optionally: auto-start or redirect
  // bootstrap.loadPackage(menu.scenes[0].package);
</script>

//the menu probably contains items like this:
{
  id: "scene:chess",
  title: "Chess",
  desc: "Classic board game",
  icon: "chess.svg",
  repo: ["https://cdn.m7.org/games/"],   // ← override or extend endpoint list
  package: "scene:chess"
}

function onSceneSelected(sceneID) {
  const scene = menu.scenes.find(s => s.id === sceneID);

  const def = bootstrap.loadPackageDef(scene.package, { repo: scene.repo });
  bootstrap.loadPackage(def);
}
//repos
{
  id: "cdn:m7",
  name: "M7 Public CDN",
  desc: "Primary hosted package repo for public games and tools",
  endpoint: "https://cdn.m7.org/repo/",
  priority: 1
}

bootstrapper can stoore like this
this.repos = [
  { id: "cdn:m7", ... },
  { id: "local", endpoint: "/repo/", priority: 2 },
  ...
];
